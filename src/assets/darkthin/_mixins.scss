@import '~bourbon/app/assets/stylesheets/bourbon';

@mixin text-stroke($color, $width) {
    text-shadow: 0 $width 0 $color, (0 - $width) $width 0 $color, $width $width 0 $color, 0 (0 - $width) 0 $color, (0 - $width) (0 - $width) 0 $color, $width (0 - $width) 0 $color, (0 - $width) 0 0 $color, $width 0 0 $color;
}

@mixin table-row-edges-rounding($radius) {
    & {
        th, td {
            &:first-child {
                border-radius: $radius 0 0 $radius;
            }

            &:last-child {
                border-radius: 0 $radius $radius 0;
            }
        }
    }
}

@mixin wrap-in-plate($color, $radius) {
    @include prefixer(box-shadow, 0px 0px .2rem 0px rgba(0, 0, 0, .3), moz webkit o spec);
    background-color: $color;
    border-radius: $radius;
}


@mixin gradient-border($from, $to, $width, $location: 'left', $type: 'linear', $selector: 'before') {
  $offset: -$width;
  $position: null;
  $size: null;
  $gradient: null;

  // determine position: 
  @if ($location == 'top') { $position: $offset 0 null 0; }
  @else if ($location == 'right') { $position: $offset 0 $offset null; }
  @else if ($location == 'bottom') { $position: null 0 $offset 0; }
  @else { $position: $offset null $offset 0; }
  
  // determine size:
  @if ($location == 'top' or $location == 'bottom') { $size: auto $width; }
  @else { $size: $width auto; }
  
  // determine gradient:
  $direction: null;
  $color-start: null;
  $color-end: null;
  $color: null;

  @if ($location == 'top') { $direction: 90deg; $color-start: $from; $color-end: $to; }
  @else if ($location == 'right') { $direction: 0deg; $color-start: $from; $color-end: $to; }
  @else if ($location == 'bottom') { $direction: 90deg; $color-start: $to; $color-end: $from; }
  @else { $direction: 180deg; $color-start: $to; $color-end: $from; }

  @if ($type == 'linear') { $color: $color-start 0%, $color-end 100%; }
  @else if ($type == 'reflected') { $color: $color-start 0%, $color-end 50%, $color-start 100% }

  $gradient: $direction, $color;

  & {
    position: relative;
    z-index: 0;
  }
  &:#{$selector} {
      @include linear-gradient($gradient...);
      @include position(absolute, $position);
      @include size($size);

      content: "";
      border-radius: .2rem;
      z-index: -1;

      @content;
  }
}
